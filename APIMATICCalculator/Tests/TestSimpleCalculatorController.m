/*
 * APIMATICCalculator
 *
 * This file was automatically generated by APIMATIC v2.0 on 11/03/2016
 */
#import <XCTest/XCTest.h>
#import "SimpleCalculatorController.h"
#import "TestHelper.h"
#import "TestBaseController.h"

@interface  TestSimpleCalculatorController : TestBaseController
//Controller instance for all tests
@property SimpleCalculatorController* controller;
@end 


@implementation  TestSimpleCalculatorController : TestBaseController

//Setup test class
//This method is called before the invocation of each test method in the test class
- (void)setUp {
    [super setUp];
    self.controller = [[SimpleCalculatorController alloc]init];
}

//Teardown test class
//This method is called after the invocation of each test method in the test class
- (void)tearDown {
    [super tearDown];
}	


// Test Case to see if Calculator works    
-(void) testSummationTest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    GetCalculateInput *input = [[GetCalculateInput alloc]init];
    input.operation = (enum OperationTypeEnum) [OperationTypeEnumHelper operationTypeEnumFromString: @"SUM"];
    input.x = [@"5" doubleValue];
    input.y = [@"6" doubleValue];

    // Set callback and perform API call
    [self.controller getCalculateAsyncWithGetCalculateInput: input completionBlock:^(BOOL success, HttpContext* context, NSNumber* response, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        // Test whether the captured response is not null
        XCTAssertTrue(response!=nil);
		// Test whether the captured response is as we expected
 
                XCTAssertEqualWithAccuracy(11.0, [response doubleValue], [TestBaseController assertPrecision]);
                [expectation fulfill];
    }];
    [self wait];
}

// Test Case to see if Calculator works    
-(void) testMultiplicationTest {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    GetCalculateInput *input = [[GetCalculateInput alloc]init];
    input.operation = (enum OperationTypeEnum) [OperationTypeEnumHelper operationTypeEnumFromString: @"MULTIPLY"];
    input.x = [@"5" doubleValue];
    input.y = [@"6" doubleValue];

    // Set callback and perform API call
    [self.controller getCalculateAsyncWithGetCalculateInput: input completionBlock:^(BOOL success, HttpContext* context, NSNumber* response, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        // Test whether the captured response is not null
        XCTAssertTrue(response!=nil);
		// Test whether the captured response is as we expected
 
                XCTAssertEqualWithAccuracy(30.0, [response doubleValue], [TestBaseController assertPrecision]);
                [expectation fulfill];
    }];
    [self wait];
}



@end
